<!DOCTYPE html>
<html>
<head>

<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<style>
body {
  font-family: "Lato", sans-serif;
  background-color: lightgrey;
}

/* Fixed sidenav, full height */
.sidenav {
  height: 100%;
  width: 20%;
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
/*  background-color: beige; */
  overflow-x: hidden;
  padding-top: 0px;
  padding-left: 10px;
}

/* Style the sidenav links and the dropdown button */
.sidenav p, .dropdown-btn {
/*  padding: 6px 8px 6px 16px; */
  text-decoration: none;
  font-size: 14px;
  color: black;
  display: block;
  border: none;
  background: none;
  width: 100%;
  text-align: left;
  cursor: pointer;
  outline: none;
}

/* On mouse-over */
.sidenav p:hover, .dropdown-btn:hover {
  color: black;
  background-color: grey;  
}

/* Main content */
.main {
  margin-left: 20%; /* Same as the width of the sidenav */
  font-size: 14px; /* Increased text to enable scrolling */
/*  padding: 0px 10px; */
  height: 100%;
/*  width: 20%; */
/*  position: fixed; */
  z-index: 1;
  top: 0;
  left: 0;
/*  background-color: beige; */
/*  overflow-x: hidden; */
  padding-top: 0px;
  padding-left: 10px;

}

/* Add an active class to the active dropdown button */
.active {
  background-color: yellow;
  color: black;
}

/* Dropdown container (hidden by default). Optional: add a lighter background color and some left padding to change the design of the dropdown content */
.dropdown-sites, .dropdown-buildings, .dropdown-floors, .dropdown-disciplines, .dropdown-subjects {
  display: none;
  background-color: beige;
  padding-left: 8px;
}

/* Optional: Style the caret down icon */
.fa-caret-down {
  float: right;
  padding-right: 8px;
}

/* Some media queries for responsiveness */
@media screen and (max-height: 450px) {
  .sidenav {padding-top: 15px;}
  .sidenav a {font-size: 18px;}
}
</style>

<style>

.imagepic{
	position: relative;
	z-index: 0;
}

.imagepic:hover{
	background-color: LightGray;
	z-index: 1;
}

.imagepic span{
	/*CSS for enlarged image*/
	background-color: white;
	background: #000000;
	position: absolute;
	padding: 5px;
	left: -000px;
	border: 1px solid black;
	visibility: hidden;
	color: black;
	text-decoration: none;
}

.imagepic span img{
	/*CSS for enlarged image*/
	border-width: 0;
	padding: 2px;
	width: 500px;
/*	max-width: 350px; */
}

.imagepic:hover span{
	/*CSS for enlarged image on hover*/
	background: #000000;
	visibility: visible;
	top: 20px;
	left: auto;
	background-color: #C0C0C0;
}
</style>

<script> function loadXMLDoc(filename)
{
if (window.ActiveXObject)
  {
  xhttp = new ActiveXObject("Msxml2.XMLHTTP");
  }
else 
  {
  xhttp = new XMLHttpRequest();
  }
xhttp.open("GET", filename, false);
try {xhttp.responseType = "msxml-document"} catch(err) {} // Helping IE11
xhttp.send("");
return xhttp.responseXML;
}
</script>
<script> function LeftNavList(varElement)
{//alert(varElement);
xml = loadXMLDoc("Multipurpose.xml");
//xsl = loadXMLDoc("Left-Dropdown-Container.xsl");
xsl = loadXMLDoc("List-of-Drawings.xsl");

// code for IE
if (window.ActiveXObject || xhttp.responseType == "msxml-document")
  {
  ex = xml.transformNode(xsl);
  document.getElementById("example").innerHTML = ex;
  }
// code for Chrome, Firefox, Opera, etc.
else if (document.implementation && document.implementation.createDocument)
  {
  xsltProcessor = new XSLTProcessor();
  xsltProcessor.importStylesheet(xsl);
//  xsltProcessor.setParameter(xsl,"varName",varElement);
  resultDocument = xsltProcessor.transformToFragment(xml, document);
  document.getElementById("example").appendChild(resultDocument);
  }
}
</script>

<script> function RightNavList(varElement,varElemType)
{ // alert(varElemType + " " + varElement);
document.getElementById("RightHeading").innerHTML = varElement;
xml = loadXMLDoc("Multipurpose.xml");
xsl = loadXMLDoc("Right-Listing.xsl");
// code for IE
if (window.ActiveXObject || xhttp.responseType == "msxml-document")
  {
  ex = xml.transformNode(xsl);
  document.getElementById("RightList").innerHTML = ex;
  }
// code for Chrome, Firefox, Opera, etc.
else if (document.implementation && document.implementation.createDocument)
  {
  xsltProcessor = new XSLTProcessor();
  xsltProcessor.importStylesheet(xsl);
  xsltProcessor.setParameter(xsl,"varElem",varElemType);  
  xsltProcessor.setParameter(xsl,"varName",varElement);  
  resultDocument = xsltProcessor.transformToFragment(xml, document);
  oldList = document.getElementById("RightList");
  oldList.innerHTML = "";
  document.getElementById("RightList").appendChild(resultDocument);  

  }
}
</script>

<script> function StartRightNavList(varElement)
{ // alert(varElement);
document.getElementById("RightHeading").innerHTML = varElement;
xml = loadXMLDoc("Multipurpose.xml");
xsl = loadXMLDoc("Right-Listing.xsl");
// code for IE
if (window.ActiveXObject || xhttp.responseType == "msxml-document")
  {
  ex = xml.transformNode(xsl);
  document.getElementById("RightList").innerHTML = ex;
  }
// code for Chrome, Firefox, Opera, etc.
else if (document.implementation && document.implementation.createDocument)
  {
  xsltProcessor = new XSLTProcessor();
  xsltProcessor.importStylesheet(xsl);
  xsltProcessor.setParameter(xsl,"varName",varElement);  
  resultDocument = xsltProcessor.transformToFragment(xml, document);
//  oldDocument=document.getElementById("RightList");
//  oldDocument.parentNode.replaceChild(resultDocument, oldDocument);
//   item = document.getElementById("RightList").childNodes[0];

//	 item = document.getElementById("tb01");
//   item.parentNode.removeChild(item);

//   alert(item); alert(resultDocument);
//   document.getElementById("RightList").replaceChild(resultDocument,sp2);
//   document.getElementById("RightList").appendChild(resultDocument);
  }
}
</script>
</head>
<body onload="LeftNavList(), StartRightNavList('This is heading text')">

<div class="sidenav">
<!--
  <button class="dropdown-btn">List of Sites
    <i class="fa fa-caret-down"></i>
  </button>
  <div class="dropdown-sites">
-->  
	<p><div id="example"></div></p>
	
<!-- 
    <p>Link 1</p>
    <p>Link 2</p>
    <p>Link 3</p>
  </div>
<br>
  <button class="dropdown-btn">List of Buildings
    <i class="fa fa-caret-down"></i>
  </button>
  <div class="dropdown-buildings">
  
	<div id="example1"></div>   
  
    <p>Link 1</p>
    <p>Link 2</p>
    <p>Link 3</p>
  </div>
<br>
  <button class="dropdown-btn">List of Floors
    <i class="fa fa-caret-down"></i>
  </button>
  <div class="dropdown-floors">
    <p>Link 1</p>
    <p>Link 2</p>
    <p>Link 3</p>
  </div>
<br>
  <button class="dropdown-btn">List of Disciplines
    <i class="fa fa-caret-down"></i>
  </button>
  <div class="dropdown-disciplines">
    <p>Link 1</p>
    <p>Link 2</p>
    <p>Link 3</p>
  </div>
<br>
  <button class="dropdown-btn">List of Subjects
    <i class="fa fa-caret-down"></i>
  </button>
  <div class="dropdown-subjects">
    <p>Link 1</p>
    <p>Link 2</p>
    <p>Link 3</p>
  </div>

	<div id="example"></div> -->

</div>

<div class="main">

  
	<h2><div id="RightHeading">This is text</div></h2>
	<hr>
	
	<div id="RightList">This is intro text<br></div>
 
</div>
<!--
<script> function RightListing(Id) {
  var NameOfElement = Id;
  
  
	document.getElementById("RightHeading").innerHTML = NameOfElement;
	
	RightNavList(NameOfElement);
}
</script>
-->
<script>
/* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */
var dropdown = document.getElementsByClassName("dropdown-btn");
var i;

for (i = 0; i < dropdown.length; i++) {
  dropdown[i].addEventListener("click", function() {
  this.classList.toggle("active");
  var dropdownContent = this.nextElementSibling;
  if (dropdownContent.style.display === "block") {
  dropdownContent.style.display = "none";
  } else {
  dropdownContent.style.display = "block";
  }
  });
}
</script>

</body>
</html>